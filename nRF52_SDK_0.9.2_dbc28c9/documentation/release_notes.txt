nRF52 SDK v0.9.2
----------------
Release date: Week 42

This is an amendment to nRF52 SDK v0.9.1.

Highlights:
    - New targets to enable the two near field communication (NFC) 
      examples to run on the new PCA10040 development board with
      nRF52832 IC rev. Engineering B.

Libraries:
    - Extended the NFC HAL layer of the NFC library to support the NFCT 
      peripherial for both the chip version delivered with the nRF52 
      Preview Development Kit (Engineering A: QFAA-AA0, QFAA-AC0, 
      CGAA-AA0) and the chip version delivered with the nRF52 Development
      Kit (Engineering B: QFAA-BA0, QFAA-BB0, CHAA-AA0, CHAA-AB0).

Examples:
    - Added PCA10040 as target bord for the following examples:
      - Heart Rate Example with pairing over NFC 
      - NFC URL Record Application 

Known issues/workarounds:
    - To use the software workarounds implemented for PCA10036 (part 
      of nRF52 Preview Development Kit), globally define 
      HAL_NFC_ENGINEERING_A_FTPAN_WORKAROUND in your project.
    - The TIMER4 peripheral is used to implement one of the workarounds 
      for PCA10036. This workaround is not used for PCA10040.
    - The ble_app_hrs_pairing_nfc example is unable to wake up from 
      system off.
 

nRF52 SDK v0.9.1
----------------
Release date: Week 29
 
This is an amendment to nRF52 SDK v0.9.0.
 
Highlights:
    - Support for near field communication (NFC)
 
Libraries/Services:
    - Added a library that supports Type 2 NFC-A tag functionality in 
      read-only state
    - Added a module to generate NFC NDEF messages for BLE pairing over NFC
    - Added a module to generate NFC NDEF messages with an URI record type
    - Extended the ble_advdata module
 
Examples:
    - Added ble_app_hrs_pairing_nfc example that demonstrates pairing over 
      NFC (with S132 SoftDevice)
    - Added record_url NFC example that demonstrates exposing a URL record 
      (without SoftDevice)
 
Limitations:
    - The current version of the NFC library uses TIMER4.
    - The ble_app_hrs_pairing_nfc example has been tested only with Samsung 
      Galaxy S6.
    - If the path to the SDK directory is too long, compilation in Keil fails. 
      To work around this problem, move the SDK higher in the folder tree 
      or use shorter folder names.
 


nRF52 SDK v0.9.0
----------------
Release date: 17.06.2015
 
Highlights:
  - Support for PCA10036 board v1.0.0 with nRF52832 QFAAAA
  - Support for S132 SoftDevice v1.0.0-3.alpha (hex included)
  - Support for S212 SoftDevice v0.2.0-1.alpha 
  - Support for Keil5 without CMSIS Packs
  - Support for GCC
  - Same structure as nRF51 SDK v8.1.0
  - New peripheral drivers
  - Documentation moved to Infocenter
 
The following toolchains/devices have been used for testing and verification:
  - ARM: MDK-ARM version 5.14.0.0
  - GCC: GCC ARM Embedded 4.9 2015q1
  - Windows 7 SP1 64-bit

Supported SoftDevices:
  - S132 v1.0.0-3.alpha
  - S212 v0.2.0-1.alpha

Supported boards:
  - PCA10036 v1.0.0

Examples:
  - Most examples are ported from nRF51 SDK v8.1.0
  - BLE examples run with the S132 SoftDevice
  - ANT examples run with the S212 SoftDevice
  - The following examples are included:
    - BLE peripheral examples
    - BLE central example
    - New BLE combined central and peripheral example
    - ANT examples
    - HW peripheral examples
      - New SAADC example
      - New TWI master with TWI slave example
    - BLE/serial DFU bootloader
    - Direct Test Mode Application

Drivers:
  - Includes all drivers from nRF51 SDK v8.1.0
  - New drivers:
    - SPI driver that supports SPI and SPIM
    - UART driver that supports UART and UARTE
    - SAADC HAL driver
    - TWI slave driver
    - SAADC driver
 
Libraries/Services:
  - Same functionality as for nRF51 SDK v8.1.0
  - The following libraries and services are included:
    - BLE libraries
    - BLE Services
    - Transport Services
    - Other libraries/components
 
Known issues:
  - Device might reset when a Bluetooth link layer procedure and flash operation happens in parallel.
  - Inconsistent behavior with Nexus devices running Android v5.1.1, for example:
    - DFU fails 
    - Link loss might reset the nRF52 device 
      (such behavior might occur with other devices as well)
  - After a power cycle, a UART lockup between Segger J-Link and nRF52 might occur
    - Before a serial DFU operation or DTM can be executed, "nrfjprog --reset" must be run 
 
